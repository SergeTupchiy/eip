@startuml
!theme blueprint
Client -> Client: generate UUID=8568BA42-..
Client -> Server: PUBLISH('$file/8568BA42-../init')
note right
{
  "filename": "data.log",
  "filepath": "/client/ml-logs/",
  "size": 3075
}
end note
Server --> Client: PUBACK 0x00
Client -> Client: read segment #0, calculate sha256
Client -> Server: PUBLISH('$file/8568BA42-../{sha256}')
note right
Header/Packet Identifier: 0
Payload: <binary blob 1kB>
end note
Server -> Cache: store /client/ml-logs/data.log at 0, 1kB
Cache --> Server: ok
Server --> Client: PUBACK 0x00, Packet Identifier: 0
Client -> Client: read segment #1, calculate sha256
Client -> Server: PUBLISH('$file/8568BA42-../{sha256}')
note right
Header/Packet Identifier: 1
Payload: <binary blob 1kB>
end note
Client -> Client: read segment #2, calculate sha256
Client -> Server: PUBLISH('$file/8568BA42-../{sha256}')
note right
Header/Packet Identifier: 2
Payload: <binary blob 1kB>
end note
Client -> Client: read segment #3, calculate sha256
Client -> Server: PUBLISH('$file/8568BA42-../{sha256}')
note right
Header/Packet Identifier: 3
Payload: <binary blob 3 bytes>
end note
Server -> Cache: store /client/ml-logs/data.log at 1024, 2051 bytes
Cache --> Server: ok
Server --> Client: PUBACK 0x00, Packet Identifier: 1
Server --> Client: PUBACK 0x00, Packet Identifier: 2
Server --> Client: PUBACK 0x00, Packet Identifier: 3
Client -> Server: PUBLISH('$file/8568BA42-../fin')
Server -> Cache: finalize /client/ml-logs/data.log
Cache -> Storage: upload /client/ml-logs/data.log
Storage --> Cache: upload ok
Cache --> Server: fin ok
Server --> Client: PUBACK 0x00
Cache --> Cache: delete /client/ml-logs/data.log
@enduml
